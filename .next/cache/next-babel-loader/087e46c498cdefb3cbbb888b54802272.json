{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { useEffect, useState, createContext } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport createDataContext from './createDataContext';\nexport const NEXT_READING_KEY = 'NEXT_READING';\n\nconst nextToReadReducer = (state, action) => {\n  switch (action.type) {\n    case 'setNextOnReadingList':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nextOnReadingList: action.payload\n      });\n\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst setNextOnReadingList = dispatch => async nextOnReadingList => {\n  try {\n    await AsyncStorage.setItem(NEXT_READING_KEY, JSON.stringify(nextOnReadingList));\n  } catch (e) {\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong with sign up'\n    });\n  }\n\n  dispatch({\n    type: 'setNextOnReadingList',\n    payload: nextOnReadingList\n  });\n};\n\nconst clearNextReading = dispatch => async () => {\n  dispatch({\n    type: 'setNextOnReadingList',\n    payload: {\n      section: null,\n      theNextSectionTitle: null,\n      theNextSectionId: null\n    }\n  });\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(nextToReadReducer, {\n  setNextOnReadingList,\n  clearNextReading\n}, {\n  nextOnReadingList: {},\n  errorMessage: ''\n});","map":{"version":3,"sources":["/Users/travisgerrard/Documents/next-mdx/src/Components/context/NextToReadContext.js"],"names":["AsyncStorage","createDataContext","NEXT_READING_KEY","nextToReadReducer","state","action","type","nextOnReadingList","payload","errorMessage","setNextOnReadingList","dispatch","setItem","JSON","stringify","e","clearNextReading","section","theNextSectionTitle","theNextSectionId","Provider","Context"],"mappings":";;;;;;AAAA;AACA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,MAAMC,gBAAgB,GAAG,cAAzB;;AAEP,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,iBAAiB,EAAEF,MAAM,CAACG;AAA7C;;AACF,SAAK,WAAL;AACE,6CAAYJ,KAAZ;AAAmBK,QAAAA,YAAY,EAAEJ,MAAM,CAACG;AAAxC;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMM,oBAAoB,GAAGC,QAAQ,IAAI,MAAMJ,iBAAN,IAA2B;AAClE,MAAI;AACF,UAAMP,YAAY,CAACY,OAAb,CACJV,gBADI,EAEJW,IAAI,CAACC,SAAL,CAAeP,iBAAf,CAFI,CAAN;AAID,GALD,CAKE,OAAOQ,CAAP,EAAU;AACVJ,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,WADC;AAEPE,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;;AACDG,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,sBAAR;AAAgCE,IAAAA,OAAO,EAAED;AAAzC,GAAD,CAAR;AACD,CAbD;;AAeA,MAAMS,gBAAgB,GAAGL,QAAQ,IAAI,YAAY;AAC/CA,EAAAA,QAAQ,CAAC;AACPL,IAAAA,IAAI,EAAE,sBADC;AAEPE,IAAAA,OAAO,EAAE;AACPS,MAAAA,OAAO,EAAE,IADF;AAEPC,MAAAA,mBAAmB,EAAE,IAFd;AAGPC,MAAAA,gBAAgB,EAAE;AAHX;AAFF,GAAD,CAAR;AAQD,CATD;;AAWA,OAAO,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBpB,iBAAiB,CACpDE,iBADoD,EAEpD;AAAEO,EAAAA,oBAAF;AAAwBM,EAAAA;AAAxB,CAFoD,EAGpD;AACET,EAAAA,iBAAiB,EAAE,EADrB;AAEEE,EAAAA,YAAY,EAAE;AAFhB,CAHoD,CAA/C","sourcesContent":["// import React, { useEffect, useState, createContext } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport createDataContext from './createDataContext';\nexport const NEXT_READING_KEY = 'NEXT_READING';\n\nconst nextToReadReducer = (state, action) => {\n  switch (action.type) {\n    case 'setNextOnReadingList':\n      return { ...state, nextOnReadingList: action.payload };\n    case 'add_error':\n      return { ...state, errorMessage: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst setNextOnReadingList = dispatch => async nextOnReadingList => {\n  try {\n    await AsyncStorage.setItem(\n      NEXT_READING_KEY,\n      JSON.stringify(nextOnReadingList)\n    );\n  } catch (e) {\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong with sign up'\n    });\n  }\n  dispatch({ type: 'setNextOnReadingList', payload: nextOnReadingList });\n};\n\nconst clearNextReading = dispatch => async () => {\n  dispatch({\n    type: 'setNextOnReadingList',\n    payload: {\n      section: null,\n      theNextSectionTitle: null,\n      theNextSectionId: null\n    }\n  });\n};\n\nexport const { Provider, Context } = createDataContext(\n  nextToReadReducer,\n  { setNextOnReadingList, clearNextReading },\n  {\n    nextOnReadingList: {},\n    errorMessage: ''\n  }\n);\n"]},"metadata":{},"sourceType":"module"}