{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { useEffect, useState, createContext } from 'react';\nimport createDataContext from './createDataContext';\nimport { DATA } from '../../../SectionOutline';\nexport const READING_KEY = 'READING'; // export const NEXT_READING_KEY = 'NEXT_READING';\n\nconst readingReducer = (state, action) => {\n  switch (action.type) {\n    case 'setReadingArray':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readingArray: action.payload\n      });\n\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst setReadingArray = dispatch => async readingArray => {\n  try {\n    await localStorage.setItem(READING_KEY, JSON.stringify(readingArray));\n    dispatch({\n      type: 'setReadingArray',\n      payload: readingArray\n    });\n  } catch (error) {\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong with sign up'\n    });\n  }\n};\n\nconst clearReadingArray = dispatch => async () => {\n  try {\n    await localStorage.setItem(READING_KEY, JSON.stringify(DATA));\n    dispatch({\n      type: 'setReadingArray',\n      payload: DATA\n    });\n  } catch (error) {\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong with sign up'\n    });\n  }\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(readingReducer, {\n  setReadingArray,\n  clearReadingArray\n}, {\n  readingArray: DATA,\n  errorMessage: ''\n});","map":{"version":3,"sources":["/Users/travisgerrard/Documents/next-mdx/src/Components/context/ReadingContext.js"],"names":["createDataContext","DATA","READING_KEY","readingReducer","state","action","type","readingArray","payload","errorMessage","setReadingArray","dispatch","localStorage","setItem","JSON","stringify","error","clearReadingArray","Provider","Context"],"mappings":";;;;;;AAAA;AACA,OAAOA,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,IAAT,QAAqB,yBAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,SAApB,C,CACP;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,YAAY,EAAEF,MAAM,CAACG;AAAxC;;AACF,SAAK,WAAL;AACE,6CAAYJ,KAAZ;AAAmBK,QAAAA,YAAY,EAAEJ,MAAM,CAACG;AAAxC;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMM,eAAe,GAAIC,QAAD,IAAc,MAAOJ,YAAP,IAAwB;AAC5D,MAAI;AACF,UAAMK,YAAY,CAACC,OAAb,CAAqBX,WAArB,EAAkCY,IAAI,CAACC,SAAL,CAAeR,YAAf,CAAlC,CAAN;AACAI,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,iBAAR;AAA2BE,MAAAA,OAAO,EAAED;AAApC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOS,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,WADC;AAEPE,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CAVD;;AAYA,MAAMS,iBAAiB,GAAIN,QAAD,IAAc,YAAY;AAClD,MAAI;AACF,UAAMC,YAAY,CAACC,OAAb,CAAqBX,WAArB,EAAkCY,IAAI,CAACC,SAAL,CAAed,IAAf,CAAlC,CAAN;AACAU,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,iBAAR;AAA2BE,MAAAA,OAAO,EAAEP;AAApC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOe,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,WADC;AAEPE,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CAVD;;AAYA,OAAO,MAAM;AAAEU,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBnB,iBAAiB,CACpDG,cADoD,EAEpD;AAAEO,EAAAA,eAAF;AAAmBO,EAAAA;AAAnB,CAFoD,EAGpD;AAAEV,EAAAA,YAAY,EAAEN,IAAhB;AAAsBQ,EAAAA,YAAY,EAAE;AAApC,CAHoD,CAA/C","sourcesContent":["// import React, { useEffect, useState, createContext } from 'react';\nimport createDataContext from './createDataContext';\n\nimport { DATA } from '../../../SectionOutline';\n\nexport const READING_KEY = 'READING';\n// export const NEXT_READING_KEY = 'NEXT_READING';\n\nconst readingReducer = (state, action) => {\n  switch (action.type) {\n    case 'setReadingArray':\n      return { ...state, readingArray: action.payload };\n    case 'add_error':\n      return { ...state, errorMessage: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst setReadingArray = (dispatch) => async (readingArray) => {\n  try {\n    await localStorage.setItem(READING_KEY, JSON.stringify(readingArray));\n    dispatch({ type: 'setReadingArray', payload: readingArray });\n  } catch (error) {\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong with sign up',\n    });\n  }\n};\n\nconst clearReadingArray = (dispatch) => async () => {\n  try {\n    await localStorage.setItem(READING_KEY, JSON.stringify(DATA));\n    dispatch({ type: 'setReadingArray', payload: DATA });\n  } catch (error) {\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong with sign up',\n    });\n  }\n};\n\nexport const { Provider, Context } = createDataContext(\n  readingReducer,\n  { setReadingArray, clearReadingArray },\n  { readingArray: DATA, errorMessage: '' }\n);\n"]},"metadata":{},"sourceType":"module"}